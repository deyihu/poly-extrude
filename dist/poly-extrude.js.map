{"version":3,"file":"poly-extrude.js","sources":["../node_modules/.pnpm/earcut@2.2.3/node_modules/earcut/src/earcut.js","../src/util.js","../src/polygon.js","../src/polyline.js"],"sourcesContent":["'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    var filteredBridge = filterPoints(bridge, bridge.next);\n    filterPoints(bridgeReverse, bridgeReverse.next);\n\n    // Check if input node was removed by the filtering\n    return outerNode === bridge ? filteredBridge : outerNode;\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\r\n * https://github.com/Turfjs/turf/blob/master/packages/turf-boolean-clockwise/index.ts\r\n * @param {*} ring\r\n * @returns\r\n */\r\nexport function isClockwise(ring) {\r\n    let sum = 0;\r\n    let i = 1;\r\n    let prev;\r\n    let cur;\r\n    const len = ring.length;\r\n\r\n    while (i < len) {\r\n        prev = cur || ring[0];\r\n        cur = ring[i];\r\n        sum += (cur[0] - prev[0]) * (cur[1] + prev[1]);\r\n        i++;\r\n    }\r\n    return sum > 0;\r\n}\r\n\r\nfunction v3Sub(out, v1, v2) {\r\n    out[0] = v1[0] - v2[0];\r\n    out[1] = v1[1] - v2[1];\r\n    out[2] = v1[2] - v2[2];\r\n    return out;\r\n}\r\n\r\nfunction v3Normalize(out, v) {\r\n    const x = v[0];\r\n    const y = v[1];\r\n    const z = v[2];\r\n    const d = Math.sqrt(x * x + y * y + z * z) || 1;\r\n    out[0] = x / d;\r\n    out[1] = y / d;\r\n    out[2] = z / d;\r\n    return out;\r\n}\r\n\r\nfunction v3Cross(out, v1, v2) {\r\n    const ax = v1[0], ay = v1[1], az = v1[2],\r\n        bx = v2[0], by = v2[1], bz = v2[2];\r\n\r\n    out[0] = ay * bz - az * by;\r\n    out[1] = az * bx - ax * bz;\r\n    out[2] = ax * by - ay * bx;\r\n    return out;\r\n}\r\n\r\nexport function generateNormal(indices, position) {\r\n\r\n    function v3Set(p, a, b, c) {\r\n        p[0] = a; p[1] = b; p[2] = c;\r\n    }\r\n\r\n    const p1 = [];\r\n    const p2 = [];\r\n    const p3 = [];\r\n\r\n    const v21 = [];\r\n    const v32 = [];\r\n\r\n    const n = [];\r\n\r\n    const len = indices.length;\r\n    const normals = new Float32Array(position.length);\r\n    let f = 0;\r\n    while (f < len) {\r\n\r\n        // const i1 = indices[f++] * 3;\r\n        // const i2 = indices[f++] * 3;\r\n        // const i3 = indices[f++] * 3;\r\n        // const i1 = indices[f];\r\n        // const i2 = indices[f + 1];\r\n        // const i3 = indices[f + 2];\r\n        const a = indices[f], b = indices[f + 1], c = indices[f + 2];\r\n        const i1 = a * 3, i2 = b * 3, i3 = c * 3;\r\n\r\n        v3Set(p1, position[i1], position[i1 + 1], position[i1 + 2]);\r\n        v3Set(p2, position[i2], position[i2 + 1], position[i2 + 2]);\r\n        v3Set(p3, position[i3], position[i3 + 1], position[i3 + 2]);\r\n\r\n        v3Sub(v32, p3, p2);\r\n        v3Sub(v21, p1, p2);\r\n        v3Cross(n, v32, v21);\r\n        // Already be weighted by the triangle area\r\n        for (let i = 0; i < 3; i++) {\r\n            normals[i1 + i] += n[i];\r\n            normals[i2 + i] += n[i];\r\n            normals[i3 + i] += n[i];\r\n        }\r\n        f += 3;\r\n    }\r\n\r\n    let i = 0;\r\n    const l = normals.length;\r\n    while (i < l) {\r\n        v3Set(n, normals[i], normals[i + 1], normals[i + 2]);\r\n        v3Normalize(n, n);\r\n        normals[i] = n[0] || 0;\r\n        normals[i + 1] = n[1] || 0;\r\n        normals[i + 2] = n[2] || 0;\r\n        i += 3;\r\n    }\r\n\r\n    return normals;\r\n}\r\n\r\nexport function merge(results) {\r\n    if (results.length === 1) {\r\n        const result = {\r\n            position: results[0].position,\r\n            normal: results[0].normal,\r\n            uv: results[0].uv,\r\n            indices: results[0].indices,\r\n            results\r\n        };\r\n        return result;\r\n    }\r\n    let plen = 0, ilen = 0;\r\n    for (let i = 0, len = results.length; i < len; i++) {\r\n        const { position, indices } = results[i];\r\n        plen += position.length;\r\n        ilen += indices.length;\r\n    }\r\n    const result = {\r\n        position: new Float32Array(plen),\r\n        normal: new Float32Array(plen),\r\n        uv: new Float32Array(plen / 3 * 2),\r\n        indices: new Uint32Array(ilen),\r\n        results\r\n    };\r\n    let pOffset = 0, pCount = 0, iIdx = 0, uvOffset = 0;\r\n    for (let i = 0, len = results.length; i < len; i++) {\r\n        const { position, indices, normal, uv } = results[i];\r\n        result.position.set(position, pOffset);\r\n        result.normal.set(normal, pOffset);\r\n        result.uv.set(uv, uvOffset);\r\n        let j = 0;\r\n        const len1 = indices.length;\r\n        while (j < len1) {\r\n            const pIndex = indices[j] + pCount;\r\n            result.indices[iIdx] = pIndex;\r\n            iIdx++;\r\n            j++;\r\n        }\r\n        uvOffset += uv.length;\r\n        pOffset += position.length;\r\n        pCount += position.length / 3;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function radToDeg(rad) {\r\n    return rad * 180 / Math.PI;\r\n}\r\n\r\nexport function degToRad(angle) {\r\n    return angle / 180 * Math.PI;\r\n}\r\n\r\n// https://github.com/mrdoob/three.js/blob/16f13e3b07e31d0e9a00df7c3366bbe0e464588c/src/geometries/ExtrudeGeometry.js?_pjax=%23js-repo-pjax-container#L736\r\nexport function generateSideWallUV(uvs, vertices, indexA, indexB, indexC, indexD) {\r\n\r\n    const idx1 = indexA * 3, idx2 = indexB * 3, idx3 = indexC * 3, idx4 = indexD * 3;\r\n    const a_x = vertices[idx1];\r\n    const a_y = vertices[idx1 + 1];\r\n    const a_z = vertices[idx1 + 2];\r\n    const b_x = vertices[idx2];\r\n    const b_y = vertices[idx2 + 1];\r\n    const b_z = vertices[idx2 + 2];\r\n    const c_x = vertices[idx3];\r\n    const c_y = vertices[idx3 + 1];\r\n    const c_z = vertices[idx3 + 2];\r\n    const d_x = vertices[idx4];\r\n    const d_y = vertices[idx4 + 1];\r\n    const d_z = vertices[idx4 + 2];\r\n\r\n    if (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\r\n\r\n        uvs.push(a_x, 1 - a_z);\r\n        uvs.push(b_x, 1 - b_z);\r\n        uvs.push(c_x, 1 - c_z);\r\n        uvs.push(d_x, 1 - d_z);\r\n    } else {\r\n        uvs.push(a_y, 1 - a_z);\r\n        uvs.push(b_y, 1 - b_z);\r\n        uvs.push(c_y, 1 - c_z);\r\n        uvs.push(d_y, 1 - d_z);\r\n    }\r\n\r\n}\r\n","\r\nimport earcut from 'earcut';\r\nimport { generateNormal, generateSideWallUV, isClockwise, merge } from './util';\r\n\r\nexport function extrudePolygons(polygons, options) {\r\n    options = Object.assign({}, { depth: 2 }, options);\r\n    const results = polygons.map(polygon => {\r\n        for (let i = 0, len = polygon.length; i < len; i++) {\r\n            const ring = polygon[i];\r\n            validateRing(ring);\r\n            if (i === 0) {\r\n                if (!isClockwise(ring)) {\r\n                    polygon[i] = ring.reverse();\r\n                }\r\n            } else if (isClockwise(ring)) {\r\n                polygon[i] = ring.reverse();\r\n            }\r\n            if (isClosedRing(ring)) {\r\n                ring.splice(ring.length - 1, 1);\r\n            }\r\n        }\r\n        const result = flatVertices(polygon, options);\r\n        result.polygon = polygon;\r\n        const triangles = earcut(result.flatVertices, result.holes, 2);\r\n        generateTopAndBottom(result, triangles);\r\n        generateSides(result, options);\r\n        result.position = new Float32Array(result.points);\r\n        result.indices = new Uint32Array(result.index);\r\n        result.uv = new Float32Array(result.uvs);\r\n        result.normal = generateNormal(result.indices, result.position);\r\n        return result;\r\n    });\r\n    const result = merge(results);\r\n    result.polygons = polygons;\r\n    return result;\r\n\r\n}\r\n\r\nfunction generateTopAndBottom(result, triangles) {\r\n    const index = [];\r\n    const { count } = result;\r\n    for (let i = 0, len = triangles.length; i < len; i += 3) {\r\n        // top\r\n        const a = triangles[i], b = triangles[i + 1], c = triangles[i + 2];\r\n        index[i] = a;\r\n        index[i + 1] = b;\r\n        index[i + 2] = c;\r\n        // bottom\r\n        const idx = len + i;\r\n        const a1 = count + a, b1 = count + b, c1 = count + c;\r\n        index[idx] = a1;\r\n        index[idx + 1] = b1;\r\n        index[idx + 2] = c1;\r\n    }\r\n    result.index = index;\r\n}\r\n\r\nfunction generateSides(result, options) {\r\n    const { points, index, polygon, uvs } = result;\r\n    const z = options.depth;\r\n    for (let i = 0, len = polygon.length; i < len; i++) {\r\n        const ring = polygon[i];\r\n        let j = 0;\r\n        const len1 = ring.length;\r\n        while (j < len1) {\r\n            const v1 = ring[j];\r\n            let v2 = ring[j + 1];\r\n            if (j === len1 - 1) {\r\n                v2 = ring[0];\r\n            }\r\n            const idx = points.length / 3;\r\n            const x1 = v1[0], y1 = v1[1], x2 = v2[0], y2 = v2[1];\r\n            points.push(x1, y1, z, x2, y2, z, x1, y1, 0, x2, y2, 0);\r\n            const a = idx + 2, b = idx + 3, c = idx, d = idx + 1;\r\n            // points.push(p3, p4, p1, p2);\r\n            index.push(a, c, b, c, d, b);\r\n            // index.push(c, d, b);\r\n\r\n            generateSideWallUV(uvs, points, a, b, c, d);\r\n            j++;\r\n        }\r\n    }\r\n}\r\n\r\nfunction calPolygonPointsCount(polygon) {\r\n    let count = 0;\r\n    let i = 0;\r\n    const len = polygon.length;\r\n    while (i < len) {\r\n        count += (polygon[i].length);\r\n        i++;\r\n    }\r\n    return count;\r\n}\r\n\r\nfunction flatVertices(polygon, options) {\r\n    const count = calPolygonPointsCount(polygon);\r\n    const len = polygon.length;\r\n    const holes = [], flatVertices = new Float32Array(count * 2), points = [], uvs = [];\r\n    const pOffset = count * 3, uOffset = count * 2;\r\n    const z = options.depth;\r\n\r\n    let idx0 = 0, idx1 = 0, idx2 = 0;\r\n    for (let i = 0; i < len; i++) {\r\n        const ring = polygon[i];\r\n        if (i > 0) {\r\n            holes.push(idx0 / 2);\r\n        }\r\n        let j = 0;\r\n        const len1 = ring.length;\r\n        while (j < len1) {\r\n            const c = ring[j];\r\n            const x = c[0], y = c[1];\r\n\r\n            flatVertices[idx0++] = x;\r\n            flatVertices[idx0++] = y;\r\n\r\n            // top vertices\r\n            points[idx1] = x;\r\n            points[idx1 + 1] = y;\r\n            points[idx1 + 2] = z;\r\n\r\n            // bottom vertices\r\n            points[pOffset + idx1] = x;\r\n            points[pOffset + idx1 + 1] = y;\r\n            points[pOffset + idx1 + 2] = 0;\r\n\r\n            uvs[idx2] = x;\r\n            uvs[idx2 + 1] = y;\r\n\r\n            uvs[uOffset + idx2] = x;\r\n            uvs[uOffset + idx2 + 1] = y;\r\n\r\n            idx1 += 3;\r\n            idx2 += 2;\r\n            j++;\r\n        }\r\n    }\r\n    return {\r\n        flatVertices,\r\n        holes,\r\n        points,\r\n        count,\r\n        uvs\r\n    };\r\n\r\n}\r\n\r\nfunction validateRing(ring) {\r\n    if (!isClosedRing(ring)) {\r\n        ring.push(ring[0]);\r\n    }\r\n}\r\n\r\nfunction isClosedRing(ring) {\r\n    const len = ring.length;\r\n    const [x1, y1] = ring[0], [x2, y2] = ring[len - 1];\r\n    return (x1 === x2 && y1 === y2);\r\n}\r\n","import { degToRad, generateNormal, generateSideWallUV, merge, radToDeg } from './util';\r\n\r\nexport function extrudePolylines(lines, options) {\r\n    options = Object.assign({}, { depth: 2, lineWidth: 1 }, options);\r\n    const results = lines.map(line => {\r\n        const result = expandLine(line, options);\r\n        result.line = line;\r\n        generateTopAndBottom(result, options);\r\n        generateSides(result, options);\r\n        result.position = new Float32Array(result.points);\r\n        result.indices = new Uint32Array(result.index);\r\n        result.uv = new Float32Array(result.uvs);\r\n        result.normal = generateNormal(result.indices, result.position);\r\n        return result;\r\n    });\r\n    const result = merge(results);\r\n    result.lines = lines;\r\n    return result;\r\n}\r\n\r\nfunction generateTopAndBottom(result, options) {\r\n    const z = options.depth;\r\n    const points = [], index = [], uvs = [];\r\n    const { leftPoints, rightPoints } = result;\r\n    let i = 0, len = leftPoints.length;\r\n    while (i < len) {\r\n        // top left\r\n        const idx0 = i * 3;\r\n        const [x1, y1] = leftPoints[i];\r\n        points[idx0] = x1;\r\n        points[idx0 + 1] = y1;\r\n        points[idx0 + 2] = z;\r\n\r\n        // top right\r\n        const [x2, y2] = rightPoints[i];\r\n        const idx1 = len * 3 + idx0;\r\n        points[idx1] = x2;\r\n        points[idx1 + 1] = y2;\r\n        points[idx1 + 2] = z;\r\n\r\n        // bottom left\r\n        const idx2 = (len * 2) * 3 + idx0;\r\n        points[idx2] = x1;\r\n        points[idx2 + 1] = y1;\r\n        points[idx2 + 2] = 0;\r\n\r\n        // bottom right\r\n        const idx3 = (len * 2) * 3 + len * 3 + idx0;\r\n        points[idx3] = x2;\r\n        points[idx3 + 1] = y2;\r\n        points[idx3 + 2] = 0;\r\n\r\n        i++;\r\n    }\r\n    i = 0;\r\n    len = points.length;\r\n    while (i < len) {\r\n        const x = points[i], y = points[i + 1];\r\n        uvs.push(x, y);\r\n        i += 3;\r\n    }\r\n    i = 0;\r\n    len = leftPoints.length;\r\n    while (i < len - 1) {\r\n        // top\r\n        // left1 left2 right1,right2\r\n        const a1 = i, b1 = i + 1, c1 = a1 + len, d1 = b1 + len;\r\n        index.push(a1, c1, b1);\r\n        index.push(c1, d1, b1);\r\n\r\n        // bottom\r\n        // left1 left2 right1,right2\r\n        const len2 = len * 2;\r\n        const a2 = i + len2, b2 = a2 + 1, c2 = a2 + len, d2 = b2 + len;\r\n        index.push(a2, c2, b2);\r\n        index.push(c2, d2, b2);\r\n        i++;\r\n    }\r\n    result.index = index;\r\n    result.points = points;\r\n    result.uvs = uvs;\r\n}\r\n\r\nfunction generateSides(result, options) {\r\n    const { points, index, leftPoints, rightPoints, uvs } = result;\r\n    const z = options.depth;\r\n    const rings = [leftPoints, rightPoints];\r\n\r\n    function addOneSideIndex(v1, v2) {\r\n        const idx = points.length / 3;\r\n        points.push(v1[0], v1[1], z, v2[0], v2[1], z, v1[0], v1[1], 0, v2[0], v2[1], 0);\r\n        const a = idx + 2, b = idx + 3, c = idx, d = idx + 1;\r\n        index.push(a, c, b, c, d, b);\r\n        generateSideWallUV(uvs, points, a, b, c, d);\r\n    }\r\n\r\n    for (let i = 0, len = rings.length; i < len; i++) {\r\n        let ring = rings[i];\r\n        if (i > 0) {\r\n            ring = ring.map(p => {\r\n                return p;\r\n            });\r\n            ring = ring.reverse();\r\n        }\r\n        let j = 0;\r\n        const len1 = ring.length - 1;\r\n        while (j < len1) {\r\n            const v1 = ring[j];\r\n            const v2 = ring[j + 1];\r\n            addOneSideIndex(v1, v2);\r\n            j++;\r\n        }\r\n    }\r\n    const len = leftPoints.length;\r\n    const vs = [rightPoints[0], leftPoints[0], leftPoints[len - 1], rightPoints[len - 1]];\r\n    for (let i = 0; i < vs.length; i += 2) {\r\n        const v1 = vs[i], v2 = vs[i + 1];\r\n        addOneSideIndex(v1, v2);\r\n    }\r\n}\r\n\r\nconst TEMPV1 = { x: 0, y: 0 }, TEMPV2 = { x: 0, y: 0 };\r\n\r\nfunction expandLine(line, options) {\r\n    let preAngle = 0;\r\n    const radius = options.lineWidth / 2;\r\n    const points = [], leftPoints = [], rightPoints = [];\r\n    const len = line.length;\r\n    let i = 0;\r\n    while (i < len - 1) {\r\n        const p1 = line[i],\r\n            p2 = line[i + 1];\r\n        const dy = p2[1] - p1[1],\r\n            dx = p2[0] - p1[0];\r\n        let rAngle = 0;\r\n        const rad = Math.atan(dy / dx);\r\n        const angle = radToDeg(rad);\r\n        preAngle = angle;\r\n        if (i === 0) {\r\n            rAngle = angle;\r\n            rAngle -= 90;\r\n        } else {\r\n            const p0 = line[i - 1];\r\n            TEMPV1.x = p0[0] - p1[0];\r\n            TEMPV1.y = p0[1] - p1[1];\r\n            TEMPV2.x = p2[0] - p1[0];\r\n            TEMPV2.y = p2[1] - p1[1];\r\n            const vAngle = getAngle(TEMPV1, TEMPV2);\r\n            rAngle = angle - vAngle / 2;\r\n        }\r\n        const rRad = degToRad(rAngle);\r\n        const [op1, op2] = calOffsetPoint(rRad, radius, p1);\r\n        points.push(op1, op2);\r\n        if (leftOnLine(op1, p1, p2)) {\r\n            leftPoints.push(op1);\r\n            rightPoints.push(op2);\r\n        } else {\r\n            leftPoints.push(op2);\r\n            rightPoints.push(op1);\r\n        }\r\n        i++;\r\n    }\r\n    let rAngle = preAngle;\r\n    rAngle -= 90;\r\n    const rRad = degToRad(rAngle);\r\n    const p1 = line[len - 2];\r\n    const p2 = line[len - 1];\r\n    const [op1, op2] = calOffsetPoint(rRad, radius, p2);\r\n    points.push(op1, op2);\r\n    if (leftOnLine(op1, p1, p2)) {\r\n        leftPoints.push(op1);\r\n        rightPoints.push(op2);\r\n    } else {\r\n        leftPoints.push(op2);\r\n        rightPoints.push(op1);\r\n    }\r\n\r\n    return { offsetPoints: points, leftPoints, rightPoints };\r\n}\r\n\r\nfunction calOffsetPoint(rad, radius, p) {\r\n    const [x, y] = p;\r\n    const x1 = Math.cos(rad) * radius, y1 = Math.sin(rad) * radius;\r\n    const p1 = [x + x1, y + y1];\r\n    const rad1 = rad += Math.PI;\r\n    const x2 = Math.cos(rad1) * radius, y2 = Math.sin(rad1) * radius;\r\n    const p2 = [x + x2, y + y2];\r\n    return [p1, p2];\r\n}\r\n\r\nconst getAngle = ({ x: x1, y: y1 }, { x: x2, y: y2 }) => {\r\n    const dot = x1 * x2 + y1 * y2;\r\n    const det = x1 * y2 - y1 * x2;\r\n    const angle = Math.atan2(det, dot) / Math.PI * 180;\r\n    return (angle + 360) % 360;\r\n};\r\n\r\nfunction leftOnLine(p, p1, p2) {\r\n    const [x1, y1] = p1;\r\n    const [x2, y2] = p2;\r\n    const [x, y] = p;\r\n    return (y1 - y2) * x + (x2 - x1) * y + x1 * y2 - x2 * y1 > 0;\r\n}\r\n"],"names":["earcutModule","exports","earcut","earcut_1","data","holeIndices","dim","hasHoles","length","outerLen","outerNode","linkedList","triangles","next","prev","minX","minY","maxX","maxY","x","y","invSize","eliminateHoles","i","Math","max","earcutLinked","start","end","clockwise","last","signedArea","insertNode","equals","removeNode","filterPoints","p","again","steiner","area","ear","pass","indexCurve","stop","isEarHashed","isEar","push","cureLocalIntersections","splitEarcut","a","b","c","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","prevZ","n","nextZ","z","intersects","locallyInside","isValidDiagonal","splitPolygon","queue","len","list","getLeftmost","sort","compareX","eliminateHole","hole","bridge","findHoleBridge","bridgeReverse","filteredBridge","hx","hy","qx","Infinity","m","mx","my","tanMin","tan","abs","sectorContainsSector","sortLinked","q","e","tail","numMerges","pSize","qSize","inSize","leftmost","ax","ay","bx","by","cx","cy","px","py","intersectsPolygon","middleInside","r","p1","p2","q1","q2","o1","sign","o2","o3","o4","onSegment","min","num","inside","a2","Node","b2","an","bp","deviation","polygonArea","trianglesArea","sum","j","flatten","result","vertices","holes","dimensions","holeIndex","d","isClockwise","ring","cur","v3Sub","out","v1","v2","v3Normalize","v","sqrt","v3Cross","az","bz","generateNormal","indices","position","v3Set","p3","v21","v32","normals","Float32Array","f","i1","i2","i3","l","merge","results","normal","uv","plen","ilen","Uint32Array","pOffset","pCount","iIdx","uvOffset","set","len1","pIndex","radToDeg","rad","PI","degToRad","angle","generateSideWallUV","uvs","indexA","indexB","indexC","indexD","idx1","idx2","idx3","idx4","a_x","a_y","a_z","b_x","b_y","b_z","c_x","c_y","c_z","d_x","d_y","d_z","extrudePolygons","polygons","options","Object","assign","depth","map","polygon","validateRing","reverse","isClosedRing","splice","flatVertices","generateTopAndBottom","generateSides","points","index","count","idx","a1","b1","c1","x1","y1","x2","y2","calPolygonPointsCount","uOffset","idx0","extrudePolylines","lines","lineWidth","line","expandLine","leftPoints","rightPoints","d1","len2","c2","d2","rings","addOneSideIndex","vs","TEMPV1","TEMPV2","preAngle","radius","dy","dx","rAngle","atan","p0","vAngle","getAngle","rRad","calOffsetPoint","op1","op2","leftOnLine","offsetPoints","cos","sin","rad1","dot","det","atan2"],"mappings":"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"}